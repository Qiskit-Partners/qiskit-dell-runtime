apiVersion: v1
kind: Namespace
metadata:
  name: ${QRE_NS}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: qreorch
  namespace: ${QRE_NS}

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: ${QRE_NS}
  name: qreorch
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: qreorch_binding
  namespace: ${QRE_NS}
subjects:
- kind: ServiceAccount
  name: qreorch
  apiGroup: ""
roleRef:
  kind: Role
  name: qreorch
  apiGroup: ""

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: ${QRE_NS}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ${QRE_NS}
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: ${QRE_NS}
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: harbor.dell.com/dojo-harbor/qre/mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: "MYSQL_DATABASE"
          value: "qre"
        - name: "MYSQL_USER"
          value: "qre"
        - name: "MYSQL_PASSWORD"
          value: "qre"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---

apiVersion: v1
kind: Pod
metadata:
  name: qre-orchestrator
  namespace: ${QRE_NS}
  labels:
    app: qre-orchestrator
spec:
  serviceAccountName: qreorch
  containers:
    - name: qre-orchestrator
      image: harbor.dell.com/dojo-harbor/qre/orchestrator
      env:
      - name: DB_HOST
        value: "mysql"
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: "qre"
      - name: DB_PASSWORD
        value: "qre"
      - name: DB_NAME
        value: "qre"
      ports:
      - containerPort: 8080
  imagePullSecrets:
    - name: ${image_secret}

---

apiVersion: v1
kind: Service
metadata:
  name: qre-orchestrator
  namespace: ${QRE_NS}
spec:
  loadBalancerIP: 100.80.243.207
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: qre-orchestrator
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: zoo1
  namespace: ${QRE_NS}
  labels:
    app: zookeeper-1
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
    - name: follower
      port: 2888
      protocol: TCP
    - name: leader
      port: 3888
      protocol: TCP
  selector:
    app: zookeeper-1

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: ${QRE_NS}
  labels:
    name: kafka
spec:
  ports:
    - port: 9092
      name: kafka-port
      protocol: TCP
  selector:
    app: kafka
    id: "0"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment-1
  namespace: ${QRE_NS}
spec:
  selector:
    matchLabels:
      app: zookeeper-1
  template:
    metadata:
      labels:
        app: zookeeper-1
    spec:
      containers:
        - name: zoo1
          image: harbor.dell.com/dojo-harbor/qre/zookeeper
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zoo1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker0
  namespace: ${QRE_NS}
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        id: "0"
    spec:
      containers:
        - name: kafka
          image: harbor.dell.com/dojo-harbor/qre/kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka-service
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zoo1:2181
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_CREATE_TOPICS
              value: sample.topic:1:1