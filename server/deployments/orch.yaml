
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: qre-orchestrator
  namespace: ${QRE_NS}    
spec:
  selector:
    matchLabels:
      app: qre-orchestrator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: qre-orchestrator
    spec:
      serviceAccountName: qreorch
      containers:
        - name: qre-orchestrator
          image: harbor.dell.com/dojo-harbor/${QRE_NS}/orchestrator
          env:
          - name: DB_HOST
            value: "mysql"
          - name: DB_PORT
            value: "3306"
          - name: DB_USER
            value: "qre"
          - name: DB_PASSWORD
            value: "qre"
          - name: DB_NAME
            value: "qre"
          - name: SSO_SECRET_KEY
            value: ${SSO_SECRET_KEY}
          - name: SSO_SESSION_TYPE
            value: ${SSO_SESSION_TYPE}
          - name: SSO_TOKEN_URL
            value: ${SSO_TOKEN_URL}
          - name: SSO_AUTH_URL
            value: ${SSO_AUTH_URL}
          - name: SSO_INFO_URL
            value: ${SSO_INFO_URL}                                              
          ports:
          - containerPort: 8080
          volumeMounts:
          - name: certs
            mountPath: "/etc/qre_certs"
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: certs
          items:
          - key: qrecerts.crt
            path: qrecerts.crt
      # imagePullSecrets:
      #   - name: ${image_secret}

---

apiVersion: v1
kind: Service
metadata:
  name: qre-orchestrator
  namespace: ${QRE_NS}
spec:
  # loadBalancerIP: 100.80.243.207
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: qre-orchestrator
  # type: LoadBalancer

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: qre-ingress-orchestrator
  namespace: ${QRE_NS}
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: ${QRE_NS}.oro-sandbox-small1.k8s.cec.lab.emc.com
    http:
      paths:
      - path: /
        backend:
          serviceName: qre-orchestrator
          servicePort: 8080
